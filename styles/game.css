/* Reflection Game - Main Styles */

/* Reset and Base Styles */
body {
    margin: 0;
    padding: 20px;
    background: #f0f0f0;
    font-family: 'Arial', sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Typography */
h1 {
    color: #333;
    margin-bottom: 20px;
    font-size: 2.5rem;
    text-align: center;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
}

/* Game Container */
#gameContainer {
    position: relative;
    background: white;
    border: 2px solid #333;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

#gameCanvas {
    display: block;
    cursor: crosshair;
}

/* UI Controls */
#ui {
    margin: 20px 0;
    text-align: center;
}

#status {
    margin: 10px 0;
    font-size: 18px;
    font-weight: bold;
    color: #333;
    min-height: 25px;
}

/* Buttons */
button {
    padding: 10px 20px;
    margin: 0 10px;
    background: #333;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    font-weight: 500;
    transition: all 0.2s ease;
}

button:hover {
    background: #555;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

button:active {
    transform: translateY(0);
    box-shadow: 0 1px 2px rgba(0,0,0,0.2);
}

button:disabled {
    background: #ccc;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

button:disabled:hover {
    background: #ccc;
    transform: none;
}

/* Instructions Panel */
#instructions {
    max-width: 600px;
    margin: 20px 0;
    padding: 15px;
    background: #e8f4fd;
    border-radius: 5px;
    border-left: 4px solid #2196F3;
    line-height: 1.6;
}

#instructions strong {
    color: #1976D2;
}

/* Game State Colors */
.status-playing {
    color: #2196F3;
}

.status-game-over {
    color: #f44336;
    font-weight: bold;
}

.status-success {
    color: #4CAF50;
    font-weight: bold;
}

/* Mobile styles - hide instructions, title and show info bubble */
@media screen and (max-width: 768px) {
    h1 {
        display: none !important; /* Hide game title on all mobile views */
    }
    
    #instructions {
        display: none !important; /* Hide main instructions on all mobile views */
    }
    
    /* Show info bubble on mobile */
    .info-bubble {
        display: block;
    }
}

/* Mobile portrait - show rotation prompt */
@media screen and (max-width: 768px) and (orientation: portrait) {
    body::before {
        content: "Please rotate your device to landscape for better experience";
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(0,0,0,0.9);
        color: white;
        padding: 20px;
        border-radius: 10px;
        z-index: 1000;
        text-align: center;
        font-size: 16px;
        max-width: 300px;
    }
    
    body > * {
        opacity: 0.3;
    }
}

/* Mobile landscape optimizations */
@media screen and (max-width: 768px) and (orientation: landscape) {
    body {
        padding: 0;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
        overflow: hidden;
        background: #2c3e50;
    }
    
    
    #instructions {
        display: none !important; /* Force hide instructions on mobile landscape */
    }
    
    
    #gameContainer {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        
        /* Game board dimensions with margin */
        width: calc(100vh * 0.85); /* Use height as base, leave 15% for margins */
        height: calc(100vh * 0.85 * 0.75); /* Maintain 4:3 aspect ratio (800:600) */
        max-width: calc(100vw - 40px); /* Don't exceed viewport width minus margin */
        max-height: calc(100vh - 80px); /* Don't exceed viewport height minus margin */
        
        border: 2px solid #34495e;
        border-radius: 8px;
        background: white;
        box-shadow: 0 8px 32px rgba(0,0,0,0.3);
    }
    
    #gameCanvas {
        width: 100%;
        height: 100%;
        touch-action: none;
        display: block;
        border-radius: 6px;
    }
    
    #ui {
        position: fixed;
        bottom: 15px;
        left: 50%;
        transform: translateX(-50%);
        margin: 0;
        z-index: 100;
        background: rgba(0,0,0,0.2);
        border-radius: 25px;
        padding: 8px;
        backdrop-filter: blur(10px);
    }
    
    #status {
        font-size: 11px;
        margin: 3px 0;
        background: rgba(255,255,255,0.95);
        padding: 4px 12px;
        border-radius: 12px;
        max-width: 280px;
        text-align: center;
        color: #333;
        font-weight: 600;
    }
    
    #ui button {
        padding: 8px 16px;
        font-size: 12px;
        margin: 0 4px;
        border-radius: 18px;
        min-width: 75px;
        min-height: 36px;
        background: rgba(52, 73, 94, 0.9);
        color: white;
        border: none;
        backdrop-filter: blur(5px);
        font-weight: 600;
    }
    
    #ui button:hover {
        background: rgba(44, 62, 80, 0.9);
    }
    
    #ui button:disabled {
        background: rgba(149, 165, 166, 0.7);
        color: rgba(255,255,255,0.6);
    }
    
    /* Info bubble styles for mobile */
    .info-bubble {
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 200;
    }
    
    .info-button {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: rgba(52, 73, 94, 0.9);
        color: white;
        border: 2px solid rgba(255,255,255,0.3);
        font-size: 18px;
        font-weight: bold;
        cursor: pointer;
        backdrop-filter: blur(5px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        transition: all 0.2s ease;
    }
    
    .info-button:hover {
        background: rgba(44, 62, 80, 0.95);
        transform: scale(1.1);
    }
    
    .info-popup {
        position: absolute;
        bottom: 50px;
        right: 0;
        width: 280px;
        background: rgba(255,255,255,0.98);
        border-radius: 12px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.4);
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
        transform-origin: bottom right;
    }
    
    .info-popup.hidden {
        opacity: 0;
        transform: scale(0.8);
        pointer-events: none;
    }
    
    .info-content {
        padding: 16px;
        font-size: 14px;
        line-height: 1.5;
        color: #333;
        position: relative;
    }
    
    .close-button {
        position: absolute;
        top: 8px;
        right: 8px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background: rgba(52, 73, 94, 0.1);
        color: #666;
        border: none;
        font-size: 16px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
    }
    
    .close-button:hover {
        background: rgba(52, 73, 94, 0.2);
        color: #333;
    }
}

@media (max-width: 850px) and (orientation: landscape) {
    #gameCanvas {
        width: 100%;
        height: auto;
        max-width: 800px;
    }
    
    #gameContainer {
        width: 100%;
        max-width: 800px;
    }
    
    h1 {
        font-size: 2rem;
    }
    
    button {
        padding: 10px 18px;
        font-size: 15px;
        margin: 0 8px;
    }
}

@media (min-width: 769px) {
    /* Desktop styles - keep existing */
    #instructions {
        max-width: 600px;
        margin: 20px 0;
    }
    
    button {
        padding: 10px 20px;
        margin: 0 10px;
    }
    
    /* Hide info bubble on desktop since instructions are visible */
    .info-bubble {
        display: none;
    }
}

/* Loading States */
.loading {
    opacity: 0.7;
    pointer-events: none;
}

/* Animations */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

.fade-in {
    animation: fadeIn 0.3s ease-out;
}

.pulse {
    animation: pulse 0.5s ease-in-out;
}